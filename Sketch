//Steppermotor einbinden

#include <AFMotor.h>                                  

AF_Stepper motor(200,2);

//Servo

#include <Servo.h>

    Servo servoblau;      //Servo bennenen

//LCD-Display

#include <Wire.h>
#include <LCD.h>
#include <LiquidCrystal_I2C.h>

LiquidCrystal_I2C    lcd(0x3F,2,1,0,4,5,6,7);

#define BACKLIGHT_PIN 3

//Taster    

int tasterSCHWARZ=22;
int tasterSCHWARZstatus=0;

int tasterGRUEN=26;
int tasterGRUENstatus=0;

int tasterFRUCHT=30;
int tasterFRUCHTstatus=0;

int switchPin = 38;    
                 
int val;                                              // Variable für den Pin Zustand
int buttonState;                                      // Variable für den letzten Schalterzustand
int buttonPresses;  

//Ultraschallsensor

#define trigPin 10                               
#define echoPin 11


 
void setup() {
  
  motor.setSpeed(150);                                 //Motorgeschwindigkeit festlegen

  pinMode(trigPin, OUTPUT);                            //Ultraschall
  pinMode(echoPin, INPUT);

  pinMode(tasterSCHWARZ, INPUT);                       //Taster sind immer Inputs

  pinMode(tasterGRUEN, INPUT);

  pinMode(tasterFRUCHT, INPUT);

  pinMode(switchPin, INPUT);

  buttonState = digitalRead(switchPin);                 //Die Variable "buttonState" wird mit dem Drücken des "switchPins" verknüpft
  


  Serial.begin(9600);

  pinMode(3, OUTPUT);                                  //Hier handelt es sich um den Pieper

  servoblau.attach(34);                                //Servo an Pin 34


  //LCD-Display

  lcd.begin (16,2); //  2 Zeilen mit je 16 Zeichen
 
  lcd.setBacklightPin(BACKLIGHT_PIN,POSITIVE);
  
  lcd.setBacklight(HIGH);                           //Hintergrundbeleuchtung einschalten
  
}


void loop() {

  int i = 0;                                        //Die Variablen für die While-Schleife des auf- und abbewegen des Teebeutels und für die Anzahl der Knopfdrücke muss jeden Durchgang wieder genullt werden

  int buttonPresses = 0;                    

  
  
  
  
  long duration, distance;                           //Distanzberechnung durch Ultraschallsensor
  digitalWrite(trigPin, LOW);
  delayMicroseconds(1);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);
  duration = pulseIn(echoPin, HIGH);
  distance = (duration / 2) / 29.1;
  Serial.println(distance);
  Serial.println(" cm");


  if (distance<10)                                    //Ausgangssituation des Teebeutelautomaten

     {
      servoblau.write(0);                              //Der Servo dient der beweglichen Abtropfschale für den benutzen Teebeutel


      lcd.setCursor(0,0);
      lcd.print("Bitte Tee       "); 
      lcd.setCursor(0,1);
      lcd.print("waehlen         ");           
     }
  else
     {
      servoblau.write(90);
      
      lcd.setCursor(0,0);
      lcd.print("Bitte Tasse       ");
      lcd.setCursor(0,1);
      lcd.print("hinstellen        ");
      
     }

  tasterSCHWARZstatus=digitalRead(tasterSCHWARZ);       //Tasterzustände auslesen

  tasterGRUENstatus=digitalRead(tasterGRUEN);

  tasterFRUCHTstatus=digitalRead(tasterFRUCHT);

  buttonState = digitalRead(switchPin);   


  
//Schwarzer Tee

   if ((tasterSCHWARZstatus == HIGH) && (distance < 10))
    {
        
    lcd.setCursor(0,0); 
    lcd.print("Schwarzer Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 4:   ");

    motor.step(950,FORWARD, DOUBLE);          //Beutel in Tasse tauchen
    Serial.println("Motor vor");
    
    
    while(i<4)                                //Beutel auf- und abbewegen
      {     

    lcd.setCursor(0,0); 
    lcd.print("Schwarzer Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 4:   ");

 
    motor.step(950,FORWARD, DOUBLE);
    Serial.println("Motor vor");
    delay(1000);
    motor.step(950,BACKWARD, DOUBLE);
    Serial.println("Motor rueck"); 
    delay(1000);

    i = i + 1 ;

    lcd.print(i);
    
    delay(100);
      }
    
    if (i = 4)
    { 
    
    motor.step(950,BACKWARD, DOUBLE);              //Beutel aus Tasse ziehen
    Serial.println("Motor rueck");
    delay(1000);

    int n = 0; 
    
    while (n < 2)                                  //akustisches Signal
    {
    digitalWrite(3, HIGH);
    delay(100);
    digitalWrite(3, LOW);
    delay(100);

    n = n + 1;

    }
    
    lcd.clear();
    delay(100);
    }
    
          
    
  while (buttonPresses < 1)                       //Auf Knopfdruck Ausgangssituation wiederherstellen
  {
   lcd.setCursor (0,0);
   lcd.print("Tee ist fertig!");

   lcd.setCursor (0,1);
   lcd.print("Druecke <Fertig>"); 

    
    
 val = digitalRead(switchPin);                     //Variabe "buttonPresses" wird per Knopfdruck des "switchPins" erhöht
  if (val != buttonState)
  {
    if (val ==LOW)
    {
      buttonPresses++;
       }
     }

  
  buttonState = val;

    }
    }


//Grüner Tee (Erklärungen siehe "Schwarzer Tee")

  if ((tasterGRUENstatus == HIGH) && (distance < 10))
  
    {
      
    lcd.setCursor(0,0);
    lcd.print("Gruener Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 6:   ");

    motor.step(950,FORWARD, DOUBLE);
    Serial.println("Motor vor"); 
      
      
      while(i<6)
      {

    lcd.setCursor(0,0);
    lcd.print("Gruener Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 6:   ");
        
    motor.step(950,FORWARD, DOUBLE);
    Serial.println("Motor vor");
    delay(1000);
    motor.step(950,BACKWARD, DOUBLE);
    Serial.println("Motor rueck"); 
    delay(100);

    i = i + 1 ;
    
    lcd.print(i);
    
    delay(1000);
    }
    
    
    if (i = 6)
      {

    motor.step(950,BACKWARD, DOUBLE);
    Serial.println("Motor rueck)"); 
    delay(1000);

    
    int n = 0;  

    while (n < 2)
    {
    digitalWrite(3, HIGH);
    delay(100);
    digitalWrite(3, LOW);
    delay(100);

    n = n + 1 ;

    }

    lcd.clear();
    delay(500);  

    }
    
    while (buttonPresses < 1)
  {
    
   lcd.setCursor (0,0);
   lcd.print("Tee ist fertig!");

   lcd.setCursor (0,1);
   lcd.print("Druecke <Fertig>"); 

    
    
 val = digitalRead(switchPin);
  if (val != buttonState)
  {
    if (val ==LOW)
    {
      buttonPresses++;
       }
     }
  
  buttonState = val;
    
    }
    }
    


//Frucht Tee (Erklärungen siehe "Schwarzer Tee")

  if ((tasterFRUCHTstatus == HIGH) && (distance < 10))
  
    { 
      
    lcd.setCursor(0,0);
    lcd.print("Frucht Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 8:   ");

    motor.step(950,FORWARD, DOUBLE);
    Serial.println("Motor vor");

      
      while(i<8)
      {
        
    lcd.setCursor(0,0);
    lcd.print("Frucht Tee");
    lcd.setCursor(0,1);
    lcd.print("Warte bis 8:   ");

        
    motor.step(950, FORWARD, DOUBLE);  
    Serial.println("Motor vor");    
    delay(1000);
    motor.step(950,BACKWARD, DOUBLE);
    Serial.println("Motor rueck)"); 
    delay(1000);

    i = i + 1 ;
    
    lcd.print(i);

    delay(1000);
    }
    
    if (i = 8)
   {

    motor.step(950,BACKWARD, DOUBLE);
    Serial.println("Motor rueck"); 
    delay(1000);

    
    int n = 0;  

    while (n < 2)
    {
    digitalWrite(3, HIGH);
    delay(100);
    digitalWrite(3, LOW);
    delay(100);

    n = n + 1 ;

    }

    lcd.clear();
    delay(500);  

    
    }
    
    while (buttonPresses < 1)
  {
   lcd.setCursor (0,0);
   lcd.print("Tee ist fertig!");

   lcd.setCursor (0,1);
   lcd.print("Druecke <Fertig>"); 

    
    
  val = digitalRead(switchPin);
    if (val != buttonState)
  {
      if (val ==LOW)
    {
       buttonPresses++;
        }
     }
  
  buttonState = val;
    }
    }


 
   
    else
    {

      Serial.println("Motor steht");
      
  }
  }
